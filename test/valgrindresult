==87041== Invalid write of size 8
==87041==    at 0x136D88: WenoReconstruction::ComputeNonlinWeights(MeshInfo const&) (in /home/renpo/Research/MantleSolver/test/build/multilevel_weno)
==87041==    by 0x1267AB: main (in /home/renpo/Research/MantleSolver/test/build/multilevel_weno)
==87041==  Address 0x27cc2d40 is 0 bytes after a block of size 0 alloc'd
==87041==    at 0x483C583: operator new[](unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==87041==    by 0x1369F7: WenoReconstruction::WenoReconstruction(MeshInfo*, std::vector<double, std::allocator<double> >&, std::vector<int*, std::allocator<int*> >&, std::vector<int*, std::allocator<int*> >&, std::valarray<int>&) (in /home/renpo/Research/MantleSolver/test/build/multilevel_weno)
==87041==    by 0x12672C: main (in /home/renpo/Research/MantleSolver/test/build/multilevel_weno)
==87041== 
==87041== Invalid read of size 8
==87041==    at 0x136E59: WenoReconstruction::ComputeNonlinWeights(MeshInfo const&) (in /home/renpo/Research/MantleSolver/test/build/multilevel_weno)
==87041==    by 0x1267AB: main (in /home/renpo/Research/MantleSolver/test/build/multilevel_weno)
==87041==  Address 0x27cc2d40 is 0 bytes after a block of size 0 alloc'd
==87041==    at 0x483C583: operator new[](unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==87041==    by 0x1369F7: WenoReconstruction::WenoReconstruction(MeshInfo*, std::vector<double, std::allocator<double> >&, std::vector<int*, std::allocator<int*> >&, std::vector<int*, std::allocator<int*> >&, std::valarray<int>&) (in /home/renpo/Research/MantleSolver/test/build/multilevel_weno)
==87041==    by 0x12672C: main (in /home/renpo/Research/MantleSolver/test/build/multilevel_weno)
==87041== 
==87041== Invalid write of size 8
==87041==    at 0x136EBF: WenoReconstruction::ComputeNonlinWeights(MeshInfo const&) (in /home/renpo/Research/MantleSolver/test/build/multilevel_weno)
==87041==    by 0x1267AB: main (in /home/renpo/Research/MantleSolver/test/build/multilevel_weno)
==87041==  Address 0x27cc2c80 is 0 bytes after a block of size 0 alloc'd
==87041==    at 0x483C583: operator new[](unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==87041==    by 0x1368DD: WenoReconstruction::WenoReconstruction(MeshInfo*, std::vector<double, std::allocator<double> >&, std::vector<int*, std::allocator<int*> >&, std::vector<int*, std::allocator<int*> >&, std::valarray<int>&) (in /home/renpo/Research/MantleSolver/test/build/multilevel_weno)
==87041==    by 0x12672C: main (in /home/renpo/Research/MantleSolver/test/build/multilevel_weno)
==87041== 
==87041== Invalid read of size 8
==87041==    at 0x136ED8: WenoReconstruction::ComputeNonlinWeights(MeshInfo const&) (in /home/renpo/Research/MantleSolver/test/build/multilevel_weno)
==87041==    by 0x1267AB: main (in /home/renpo/Research/MantleSolver/test/build/multilevel_weno)
==87041==  Address 0x27cc2c80 is 0 bytes after a block of size 0 alloc'd
==87041==    at 0x483C583: operator new[](unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==87041==    by 0x1368DD: WenoReconstruction::WenoReconstruction(MeshInfo*, std::vector<double, std::allocator<double> >&, std::vector<int*, std::allocator<int*> >&, std::vector<int*, std::allocator<int*> >&, std::valarray<int>&) (in /home/renpo/Research/MantleSolver/test/build/multilevel_weno)
==87041==    by 0x12672C: main (in /home/renpo/Research/MantleSolver/test/build/multilevel_weno)
==87041== 
==87041== Invalid read of size 8
==87041==    at 0x136F2B: WenoReconstruction::ComputeNonlinWeights(MeshInfo const&) (in /home/renpo/Research/MantleSolver/test/build/multilevel_weno)
==87041==    by 0x1267AB: main (in /home/renpo/Research/MantleSolver/test/build/multilevel_weno)
==87041==  Address 0x27cc2c80 is 0 bytes after a block of size 0 alloc'd
==87041==    at 0x483C583: operator new[](unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==87041==    by 0x1368DD: WenoReconstruction::WenoReconstruction(MeshInfo*, std::vector<double, std::allocator<double> >&, std::vector<int*, std::allocator<int*> >&, std::vector<int*, std::allocator<int*> >&, std::valarray<int>&) (in /home/renpo/Research/MantleSolver/test/build/multilevel_weno)
==87041==    by 0x12672C: main (in /home/renpo/Research/MantleSolver/test/build/multilevel_weno)
==87041== 
==87041== Invalid write of size 8
==87041==    at 0x136F49: WenoReconstruction::ComputeNonlinWeights(MeshInfo const&) (in /home/renpo/Research/MantleSolver/test/build/multilevel_weno)
==87041==    by 0x1267AB: main (in /home/renpo/Research/MantleSolver/test/build/multilevel_weno)
==87041==  Address 0x27cc2d00 is 0 bytes after a block of size 0 alloc'd
==87041==    at 0x483C583: operator new[](unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==87041==    by 0x136999: WenoReconstruction::WenoReconstruction(MeshInfo*, std::vector<double, std::allocator<double> >&, std::vector<int*, std::allocator<int*> >&, std::vector<int*, std::allocator<int*> >&, std::valarray<int>&) (in /home/renpo/Research/MantleSolver/test/build/multilevel_weno)
==87041==    by 0x12672C: main (in /home/renpo/Research/MantleSolver/test/build/multilevel_weno)
==87041== 
--87041-- VALGRIND INTERNAL ERROR: Valgrind received a signal 11 (SIGSEGV) - exiting
--87041-- si_code=128;  Faulting address: 0x0;  sp: 0x1002db5e20

valgrind: the 'impossible' happened:
   Killed by fatal signal

host stacktrace:
==87041==    at 0x58050496: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/memcheck-amd64-linux)
==87041==    by 0x58004EBB: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/memcheck-amd64-linux)
==87041==    by 0x58005DA7: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/memcheck-amd64-linux)
==87041==    by 0x580A7204: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/memcheck-amd64-linux)
==87041==    by 0x580F5FD4: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/memcheck-amd64-linux)

sched status:
  running_tid=1

Thread 1: status = VgTs_Runnable (lwpid 87041)
==87041==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==87041==    by 0x12818F: int* std::__valarray_get_storage<int>(unsigned long) (in /home/renpo/Research/MantleSolver/test/build/multilevel_weno)
==87041==    by 0x12BA08: std::valarray<int>::valarray(std::valarray<int> const&) (in /home/renpo/Research/MantleSolver/test/build/multilevel_weno)
==87041==    by 0x136308: WenoStencil::ComputeSmoothnessIndicator(MeshInfo const&) (in /home/renpo/Research/MantleSolver/test/build/multilevel_weno)
==87041==    by 0x136D82: WenoReconstruction::ComputeNonlinWeights(MeshInfo const&) (in /home/renpo/Research/MantleSolver/test/build/multilevel_weno)
==87041==    by 0x1267AB: main (in /home/renpo/Research/MantleSolver/test/build/multilevel_weno)
client stack range: [0x1FFEFF7000 0x1FFF000FFF] client SP: 0x1FFEFFF1A0
valgrind stack range: [0x1002CB6000 0x1002DB5FFF] top usage: 9480 of 1048576

Thread 2: status = VgTs_WaitSys syscall 202 (lwpid 87042)
==87041==    at 0x78DD376: futex_wait_cancelable (futex-internal.h:183)
==87041==    by 0x78DD376: __pthread_cond_wait_common (pthread_cond_wait.c:508)
==87041==    by 0x78DD376: pthread_cond_wait@@GLIBC_2.3.2 (pthread_cond_wait.c:638)
==87041==    by 0x7F05D5A: ??? (in /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3)
==87041==    by 0x78D6608: start_thread (pthread_create.c:477)
==87041==    by 0x77FB162: clone (clone.S:95)
client stack range: [0xBEA9000 0xC689FFF] client SP: 0xC6895B0
valgrind stack range: [0x1006DAF000 0x1006EAEFFF] top usage: 5440 of 1048576

Thread 3: status = VgTs_WaitSys syscall 202 (lwpid 87043)
==87041==    at 0x78DD376: futex_wait_cancelable (futex-internal.h:183)
==87041==    by 0x78DD376: __pthread_cond_wait_common (pthread_cond_wait.c:508)
==87041==    by 0x78DD376: pthread_cond_wait@@GLIBC_2.3.2 (pthread_cond_wait.c:638)
==87041==    by 0x7F05D5A: ??? (in /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3)
==87041==    by 0x78D6608: start_thread (pthread_create.c:477)
==87041==    by 0x77FB162: clone (clone.S:95)
client stack range: [0xC6AA000 0xCE8AFFF] client SP: 0xCE8A5B0
valgrind stack range: [0x1006FE7000 0x10070E6FFF] top usage: 5440 of 1048576

Thread 4: status = VgTs_WaitSys syscall 202 (lwpid 87044)
==87041==    at 0x78DD376: futex_wait_cancelable (futex-internal.h:183)
==87041==    by 0x78DD376: __pthread_cond_wait_common (pthread_cond_wait.c:508)
==87041==    by 0x78DD376: pthread_cond_wait@@GLIBC_2.3.2 (pthread_cond_wait.c:638)
==87041==    by 0x7F05D5A: ??? (in /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3)
==87041==    by 0x78D6608: start_thread (pthread_create.c:477)
==87041==    by 0x77FB162: clone (clone.S:95)
client stack range: [0xCEAB000 0xD68BFFF] client SP: 0xD68B5B0
valgrind stack range: [0x10072EB000 0x10073EAFFF] top usage: 5440 of 1048576

Thread 5: status = VgTs_WaitSys syscall 202 (lwpid 87045)
==87041==    at 0x78DD376: futex_wait_cancelable (futex-internal.h:183)
==87041==    by 0x78DD376: __pthread_cond_wait_common (pthread_cond_wait.c:508)
==87041==    by 0x78DD376: pthread_cond_wait@@GLIBC_2.3.2 (pthread_cond_wait.c:638)
==87041==    by 0x7F05D5A: ??? (in /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3)
==87041==    by 0x78D6608: start_thread (pthread_create.c:477)
==87041==    by 0x77FB162: clone (clone.S:95)
client stack range: [0xD6AC000 0xDE8CFFF] client SP: 0xDE8C5B0
valgrind stack range: [0x10075EF000 0x10076EEFFF] top usage: 5440 of 1048576

Thread 6: status = VgTs_WaitSys syscall 202 (lwpid 87046)
==87041==    at 0x78DD376: futex_wait_cancelable (futex-internal.h:183)
==87041==    by 0x78DD376: __pthread_cond_wait_common (pthread_cond_wait.c:508)
==87041==    by 0x78DD376: pthread_cond_wait@@GLIBC_2.3.2 (pthread_cond_wait.c:638)
==87041==    by 0x7F05D5A: ??? (in /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3)
==87041==    by 0x78D6608: start_thread (pthread_create.c:477)
==87041==    by 0x77FB162: clone (clone.S:95)
client stack range: [0xDEAD000 0xE68DFFF] client SP: 0xE68D5B0
valgrind stack range: [0x10078F3000 0x10079F2FFF] top usage: 5440 of 1048576

Thread 7: status = VgTs_WaitSys syscall 202 (lwpid 87047)
==87041==    at 0x78DD376: futex_wait_cancelable (futex-internal.h:183)
==87041==    by 0x78DD376: __pthread_cond_wait_common (pthread_cond_wait.c:508)
==87041==    by 0x78DD376: pthread_cond_wait@@GLIBC_2.3.2 (pthread_cond_wait.c:638)
==87041==    by 0x7F05D5A: ??? (in /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3)
==87041==    by 0x78D6608: start_thread (pthread_create.c:477)
==87041==    by 0x77FB162: clone (clone.S:95)
client stack range: [0x126AE000 0x12E8EFFF] client SP: 0x12E8E5B0
valgrind stack range: [0x1007BFF000 0x1007CFEFFF] top usage: 5440 of 1048576

Thread 8: status = VgTs_WaitSys syscall 202 (lwpid 87048)
==87041==    at 0x78DD376: futex_wait_cancelable (futex-internal.h:183)
==87041==    by 0x78DD376: __pthread_cond_wait_common (pthread_cond_wait.c:508)
==87041==    by 0x78DD376: pthread_cond_wait@@GLIBC_2.3.2 (pthread_cond_wait.c:638)
==87041==    by 0x7F05D5A: ??? (in /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3)
==87041==    by 0x78D6608: start_thread (pthread_create.c:477)
==87041==    by 0x77FB162: clone (clone.S:95)
client stack range: [0x12EAF000 0x1368FFFF] client SP: 0x1368F5B0
valgrind stack range: [0x1007F03000 0x1008002FFF] top usage: 5440 of 1048576

Thread 9: status = VgTs_WaitSys syscall 202 (lwpid 87049)
==87041==    at 0x78DD376: futex_wait_cancelable (futex-internal.h:183)
==87041==    by 0x78DD376: __pthread_cond_wait_common (pthread_cond_wait.c:508)
==87041==    by 0x78DD376: pthread_cond_wait@@GLIBC_2.3.2 (pthread_cond_wait.c:638)
==87041==    by 0x7F05D5A: ??? (in /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3)
==87041==    by 0x78D6608: start_thread (pthread_create.c:477)
==87041==    by 0x77FB162: clone (clone.S:95)
client stack range: [0x136B0000 0x13E90FFF] client SP: 0x13E905B0
valgrind stack range: [0x1008207000 0x1008306FFF] top usage: 5440 of 1048576

Thread 10: status = VgTs_WaitSys syscall 202 (lwpid 87050)
==87041==    at 0x78DD376: futex_wait_cancelable (futex-internal.h:183)
==87041==    by 0x78DD376: __pthread_cond_wait_common (pthread_cond_wait.c:508)
==87041==    by 0x78DD376: pthread_cond_wait@@GLIBC_2.3.2 (pthread_cond_wait.c:638)
==87041==    by 0x7F05D5A: ??? (in /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3)
==87041==    by 0x78D6608: start_thread (pthread_create.c:477)
==87041==    by 0x77FB162: clone (clone.S:95)
client stack range: [0x13EB1000 0x14691FFF] client SP: 0x146915B0
valgrind stack range: [0x100850F000 0x100860EFFF] top usage: 5440 of 1048576

Thread 11: status = VgTs_WaitSys syscall 202 (lwpid 87051)
==87041==    at 0x78DD376: futex_wait_cancelable (futex-internal.h:183)
==87041==    by 0x78DD376: __pthread_cond_wait_common (pthread_cond_wait.c:508)
==87041==    by 0x78DD376: pthread_cond_wait@@GLIBC_2.3.2 (pthread_cond_wait.c:638)
==87041==    by 0x7F05D5A: ??? (in /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3)
==87041==    by 0x78D6608: start_thread (pthread_create.c:477)
==87041==    by 0x77FB162: clone (clone.S:95)
client stack range: [0x206B2000 0x20E92FFF] client SP: 0x20E925B0
valgrind stack range: [0x100882B000 0x100892AFFF] top usage: 5440 of 1048576

Thread 12: status = VgTs_WaitSys syscall 202 (lwpid 87052)
==87041==    at 0x78DD376: futex_wait_cancelable (futex-internal.h:183)
==87041==    by 0x78DD376: __pthread_cond_wait_common (pthread_cond_wait.c:508)
==87041==    by 0x78DD376: pthread_cond_wait@@GLIBC_2.3.2 (pthread_cond_wait.c:638)
==87041==    by 0x7F05D5A: ??? (in /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3)
==87041==    by 0x78D6608: start_thread (pthread_create.c:477)
==87041==    by 0x77FB162: clone (clone.S:95)
client stack range: [0x20EB3000 0x21693FFF] client SP: 0x216935B0
valgrind stack range: [0x1008B2F000 0x1008C2EFFF] top usage: 5440 of 1048576


Note: see also the FAQ in the source distribution.
It contains workarounds to several common problems.
In particular, if Valgrind aborted or crashed after
identifying problems in your program, there's a good chance
that fixing those problems will prevent Valgrind aborting or
crashing, especially if it happened in m_mallocfree.c.

If that doesn't help, please report this bug to: www.valgrind.org

In the bug report, send all the above text, the valgrind
version, and what OS and version you are using.  Thanks.


